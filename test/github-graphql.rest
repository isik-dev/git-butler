## github graphql test

# organization projects, repository issues : read-only
@token={{$dotenv GITHUB_TOKEN}}


# project list
POST https://api.github.com/graphql
Content-Type: application/json
Authorization: Bearer {{token}}
X-REQUEST-TYPE: GraphQL

query ($orglogin: String!) {
  organization(login: $orglogin) {
    projectsV2 (first: 50) {
      totalCount
      nodes {
        id
        number
        title
        shortDescription
        url
        updatedAt
        closed
      }
      pageInfo {
        startCursor
        endCursor
        hasPreviousPage
        hasNextPage
      }
    }
    projectsUrl
  }
}

{
    "orglogin": "jaeyong-io"
}

###

# project list
POST https://api.github.com/graphql
Content-Type: application/json
Authorization: Bearer {{token}}
X-REQUEST-TYPE: GraphQL

query ($orglogin: String!, $after: String!, $first: Int!) {
  organization(login: $orglogin) {
    projectsV2 (after: $after, first: $first) {
      totalCount
      nodes {
        id
        number
        title
        shortDescription
        url
        updatedAt
        closed
      }
      pageInfo {
        startCursor
        endCursor
        hasPreviousPage
        hasNextPage
      }
    }
    projectsUrl
  }
}

{
    "orglogin": "jaeyong-io",
    "after": "",
    "first": 50
}

###

# single project
POST https://api.github.com/graphql
Content-Type: application/json
Authorization: Bearer {{token}}
X-REQUEST-TYPE: GraphQL

query ($orglogin: String!, $projectid: Int!, ) {
  organization(login: $orglogin) {
    projectV2 (number: $projectid) {
      id
      number
      title
      closed
      createdAt
      items(last: 100) {
        totalCount
        nodes {
          id
          databaseId
          fieldValues(last: 100) {
            nodes {
              ... on ProjectV2ItemFieldTextValue {
                id
                text
              }
            }
          }
        }
      }
    }
  }
}

{
    "orglogin": "jaeyong-io",
    "projectid": 1
}

###

# project select fields (Status)
POST https://api.github.com/graphql
Content-Type: application/json
Authorization: Bearer {{token}}
X-REQUEST-TYPE: GraphQL

query ($orglogin: String!, $projectid: Int!, ) {
  organization(login: $orglogin) {
    projectV2 (number: $projectid) {
      id
      number
      title
      closed
      createdAt
      fields (last: 50) {
        totalCount
        nodes {
          ... on ProjectV2IterationField {
            id
            name
            configuration {
              completedIterations {
                id
                title
                startDate
                duration
              }
              iterations {
                id
                title
                startDate
                duration
              }
            }
          }
          ... on ProjectV2SingleSelectField {
            name
            options {
              name
            }
          }
        }
      }
    }
  }
}

{
    "orglogin": "jaeyong-io",
    "projectid": 1
}

###

# project items
POST https://api.github.com/graphql
Content-Type: application/json
Authorization: Bearer {{token}}
X-REQUEST-TYPE: GraphQL

query ($orglogin: String!, $projectid: Int!) {
  organization(login: $orglogin) {
    projectV2 (number: $projectid) {
      items(last: 10) {
        totalCount
        pageInfo {
          startCursor
          endCursor
          hasPreviousPage
          hasNextPage
        }
        nodes{
          id
          type
          fieldValueByName(name: "Status") {
            ... on ProjectV2ItemFieldSingleSelectValue {
              name
            }
          }
          fieldValues(last: 20) {
            nodes {
              ... on ProjectV2ItemFieldLabelValue {
                labels(last: 10) {
                  nodes {
                    name
                    color
                  }
                }
              }
              ... on ProjectV2ItemFieldNumberValue {
                field {
                ... on ProjectV2Field {
                    name
                  }
                }
                number
              }
              ... on ProjectV2ItemFieldIterationValue {
                title
                startDate
                duration
                field {
                ... on ProjectV2IterationField {
                    name
                  }
                }
              }
            }
          }
          content{              
            ... on DraftIssue {
              title
              body
            }
            ...on Issue {
              repository {
                name
                nameWithOwner
              }
              author {
                login
              }
              number
              title
              url
              labels(last: 10) {
                nodes {
                  name
                  color
                }
              }
            }
          }
        }
      }
    }
  }
}

{
  "orglogin": "jaeyong-io",
  "projectid": 1
}
