[
  {
    "status": "In progress",
    "est": [{ "name": "FE est", "value": 3 }],
    "num": 2196,
    "title": "V3 push support",
    "body": "<h3 dir=\"auto\">Requirements</h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">V3앱 사용자에게 베러에 BE를 통해서 푸시를 발송</p>\n</li>\n<li>\n<p dir=\"auto\">To facilitate our collaborator ONESOFTDIGM regarding V3(AhnLAB) push-setting, there is following tasks.</p>\n<ul dir=\"auto\">\n<li>JS Interface Addition\n<ul dir=\"auto\">\n<li>Push token</li>\n<li>Push payload</li>\n</ul>\n</li>\n<li>FireBase Dev Account Addition</li>\n</ul>\n</li>\n</ul>\n<h3 dir=\"auto\">TODO</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> V3 push 테스트용 Firebase 계정 생성</p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/finset-io/v3-app\">v3-app repo</a> 에 계정 공유</li>\n<li>ONESOFTDIGM 에 전달</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> FE: Native Interface 문서화 &amp; 구현 (alliance): <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1588835449\" data-permission-text=\"Title is private\" data-url=\"https://github.com/finset-io/betterday-frontend/issues/353\" data-hovercard-type=\"issue\" data-hovercard-url=\"/finset-io/betterday-frontend/issues/353/hovercard\" href=\"https://github.com/finset-io/betterday-frontend/issues/353\">finset-io/betterday-frontend#353</a></p>\n<ul dir=\"auto\">\n<li>askAppInfo:  get push token</li>\n<li>sendDeepLink: parameters 변경 필요한지 확인 필요</li>\n<li>offerPushNotification</li>\n<li>askDynamicLink, InitialDynamicLink</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> BE: Better, V3 구분해서 push 발송: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1588836845\" data-permission-text=\"Title is private\" data-url=\"https://github.com/finset-io/better-backend/issues/826\" data-hovercard-type=\"issue\" data-hovercard-url=\"/finset-io/better-backend/issues/826/hovercard\" href=\"https://github.com/finset-io/better-backend/issues/826\">finset-io/better-backend#826</a></p>\n</li>\n</ul>",
    "labels": [
      { "name": "FE", "color": "3CCD91" },
      { "name": "RN", "color": "EBEA93" },
      { "name": "3d", "color": "3941AC" }
    ],
    "url": "https://github.com/finset-io/betterday/issues/2196",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "LABGUNWOO",
    "createdAt": "2023-02-16T05:59:54.000Z"
  },
  {
    "status": "In progress",
    "est": [{ "name": "FE est", "value": 1.5 }],
    "num": 59,
    "title": "Unable to generate push tokens on some devices",
    "body": "<p dir=\"auto\">Some iOS devices are unable to generate a push token during the initial app load, as the code <code class=\"notranslate\">await messaging().getToken()</code> appears to hang indefinitely.</p>\n<p dir=\"auto\">To clarify, this issue occurs when attempting to retrieve a push token using the <code class=\"notranslate\">messaging()</code> function, which is typically used to communicate with FCM on iOS devices. It's unclear why this issue affects only certain devices, but it may be related to hardware or software differences.</p>\n<p dir=\"auto\">To conclude, research alternative methods for obtaining the push token or investigate further to determine the root cause of the problem.</p>\n<p dir=\"auto\"><a href=\"https://github.com/invertase/react-native-firebase\">react-native-firebase</a><br>\nGithub issues:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1575029853\" data-permission-text=\"Title is private\" data-url=\"https://github.com/invertase/react-native-firebase/issues/6893\" data-hovercard-type=\"issue\" data-hovercard-url=\"/invertase/react-native-firebase/issues/6893/hovercard\" href=\"https://github.com/invertase/react-native-firebase/issues/6893\">invertase/react-native-firebase#6893</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1528618075\" data-permission-text=\"Title is private\" data-url=\"https://github.com/invertase/react-native-firebase/issues/6829\" data-hovercard-type=\"issue\" data-hovercard-url=\"/invertase/react-native-firebase/issues/6829/hovercard\" href=\"https://github.com/invertase/react-native-firebase/issues/6829\">invertase/react-native-firebase#6829</a></li>\n</ul>",
    "labels": [
      { "name": "RN", "color": "EBEA93" },
      { "name": "push", "color": "962FF6" },
      { "name": "1.5d", "color": "2A168E" },
      { "name": "ios", "color": "942543" }
    ],
    "url": "https://github.com/finset-io/betterday-app/issues/59",
    "repoNameWithOwner": "finset-io/betterday-app",
    "repoName": "betterday-app",
    "repoOwner": "finset-io",
    "author": "alexfinset",
    "createdAt": "2023-03-10T08:23:24.000Z"
  },
  {
    "status": "In progress",
    "est": [{ "name": "FE est", "value": 1 }],
    "num": 63,
    "title": "Create Push Notification Policies ",
    "body": "<p dir=\"auto\">Create policies for push notifications that define how the app should handle incoming notifications and how user actions should be handled in different app states.</p>",
    "labels": [
      { "name": "documentation", "color": "0075ca" },
      { "name": "RN", "color": "EBEA93" },
      { "name": "push", "color": "962FF6" },
      { "name": "1d", "color": "2A168E" }
    ],
    "url": "https://github.com/finset-io/betterday-app/issues/63",
    "repoNameWithOwner": "finset-io/betterday-app",
    "repoName": "betterday-app",
    "repoOwner": "finset-io",
    "author": "alexfinset",
    "createdAt": "2023-03-16T07:13:35.000Z"
  },
  {
    "status": "In progress",
    "est": [{ "name": "FE est", "value": 2 }],
    "num": 60,
    "title": "Refactor Push Noti Controller",
    "body": "<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\n\n\n\nexport default function FCMController() {\n  const {\n    assignPushToken,\n    assignWebRemotePushNoti,\n    gWebRemotePushNotiDelayed,\n    assignWebRemotePushNotiDelayed\n  } = useAppContext();\n\n\n  // CHECK PERMISSIONS, GENERATE PUSH TOKEN\n  useEffect(() =&gt; {\n    (async () =&gt; {\n\n      const authStatus = await messaging().requestPermission();\n      const isEnabled =\n        authStatus === messaging.AuthorizationStatus.AUTHORIZED ||\n        authStatus === messaging.AuthorizationStatus.PROVISIONAL;\n\n      if (isEnabled) {\n        // FIXME: handle if first request fails\n        const pushToken = await messaging().getToken();\n        if (!pushToken) {\n          Sentry.captureMessage('empty push token');\n        }\n        logger.debug('FCM PUSH TOKEN &gt;&gt;&gt; ', pushToken);\n        assignPushToken(pushToken);\n      } else {\n        logger.debug('push permissions not granted', isEnabled);\n        Sentry.captureMessage('push permissions not granted');\n      }\n    })().catch((error) =&gt; {\n      logger.debug('error getting fcm push token ', error);\n      Sentry.captureException(error, {\n        tags: { section: 'GetFCMToken' }\n      });\n    });\n  }, []);\n\n  // IOS FOREGROUND\n  useEffect(() =&gt; {\n    const unsubscribe = messaging().onMessage(async (remoteMessage) =&gt; {\n      try {\n        logger.debug('@@@@@@ ON_MESSAGE @@@@@@');\n        if (constants.isIOS) {\n          logger.debug('iOS onMessage ', remoteMessage);\n          const id = get(remoteMessage, 'messageId', '');\n          const body = remoteMessage?.data?.message || remoteMessage?.notification?.body || '';\n          const title = remoteMessage?.data?.title || remoteMessage?.notification?.title || '';\n          const userInfo = remoteMessage?.data || undefined;\n          const payload = {\n            id,\n            body,\n            title,\n            userInfo\n          };\n          logger.debug('iOS onMessage payload ', payload);\n          PushNotificationIOS.addNotificationRequest(payload);\n        }\n      } catch (error) {\n        logger.debug('IOS FOREGROUND error', error);\n        Sentry.captureException(error, {\n          tags: { section: 'PushNotificationsForeground' }\n        });\n      }\n    });\n\n    return unsubscribe;\n  }, []);\n\n  // CONFIGURE PUSH, HANDLE NOTI PRESSED\n  useEffect(() =&gt; {\n    try {\n      PushNotification.configure({\n        // onRegister: function (token: any) {\n        //   logger.debug('PushNotification onRegister token:', token);\n        //   assignPushToken(token.token);\n        // },\n        // popInitialNotification: false,\n        //(required) Called when a remote is received or opened, or local notification is opened\n        onNotification: (notification) =&gt; {\n          const isBrazeNotification: boolean = get(notification, 'data._ab', false);\n          const isAndroidForeground: boolean =\n            constants.isAndroid &amp;&amp; AppState.currentState === 'active';\n          const isNotiPressed: boolean = notification.userInteraction;\n          logger.debug('PushNotification onNotification:', notification);\n          logger.debug('isBrazeNotification &gt;&gt;&gt; ', isBrazeNotification);\n          \n          if (isAndroidForeground) {\n            if (!isNotiPressed) {\n              let notiContent = {} as PushNotificationObject;\n\n              if (isBrazeNotification) {\n                notiContent = {\n                  title: get(notification, 'data.t', ''),\n                  message: get(notification, 'data.a', ''),\n                  userInfo: get(notification, 'data', undefined) as any\n                };\n              } else {\n                notiContent = {\n                  // @ts-ignore\n                  title: (notification?.title as string) || notification?.data?.title || '',\n                  message: notification?.message || notification?.data?.message || '',\n                  userInfo: get(notification, 'data', undefined) as any\n                };\n              }\n              createlocalNotification(notiContent); // 안드로이드의 경우, 포그라운드 시, 앱상단에 표시한다\n            }\n          } \n          // FIXME: passing a payload to webview without request causing a bug. remove logic below \n           else if (AppState.currentState !== 'active') {\n            UUIDGenerator.getRandomUUID().then((uuid: string) =&gt; {\n              const message = {\n                command: COMMAND_TYPES.OFFER_PUSH_NOTI_DATA,\n                id: uuid,\n                response: get(notification, 'data', undefined)\n              };\n              assignWebRemotePushNoti(message);\n            });\n          }\n\n          // BRAZE NOTIFICATIONS - BACKGROUND //\n          if (!isNotiPressed &amp;&amp; isBrazeNotification &amp;&amp; AppState.currentState !== 'active') {\n            const notiContent = {\n              title: get(notification, 'data.t', ''),\n              message: get(notification, 'data.a', ''),\n              userInfo: get(notification, 'data', undefined) as any\n            };\n            createlocalNotification(notiContent);\n          }\n\n          if (isNotiPressed) {\n            logger.debug('userInteraction true notification:', notification);\n            UUIDGenerator.getRandomUUID().then(async (uuid: string) =&gt; {\n              const notiData = get(notification, 'data', null);\n              logger.debug('notiData ', notiData);\n\n             // FIXME: wrap if else statement with foreground check\n              if (isEmpty(notiData)) {\n                const message = {\n                  command: COMMAND_TYPES.OFFER_PUSH_NOTI_DATA,\n                  id: uuid,\n                  response: notiData // iOS node-apn 이용하여 테스트 발송시 포맷이다\n                };\n                assignWebRemotePushNoti(message);\n              } else {\n                const response = get(notification, 'data', null);\n                const message = {\n                  command: COMMAND_TYPES.OFFER_PUSH_NOTI_DATA,\n                  id: uuid,\n                  response\n                };\n                // if (!notification.foreground &amp;&amp; constants.isAndroid) {\n                //   const remoteMessage = await getRemoteMessage();\n                //   message.response = get(remoteMessage, 'data', null);\n                // }\n                assignWebRemotePushNoti(message);\n                // if (constants.isAndroid) await deleteRemoteMessage();\n              }\n\n               // FIXME: match local noti with remove noti\n               // local noti - source of truth. \n               // case not handled: noti queue, each noti has a payload while code below only gets latest remote message skipping tapped notifications\n              if (!notification.foreground &amp;&amp; constants.isAndroid) {\n                const remoteMessage = await getRemoteMessage();\n                logger.debug('remoteMessage[PushNotiHelper]', remoteMessage);\n                const message = {\n                  command: COMMAND_TYPES.OFFER_PUSH_NOTI_DATA,\n                  id: uuid,\n                  response: remoteMessage\n                };\n                message.response = get(remoteMessage, 'data', null);\n                assignWebRemotePushNoti(message);\n                await deleteRemoteMessage();\n              }\n            });\n          }\n          // (required) Called when a remote is received or opened, or local notification is opened\n          notification.finish(PushNotificationIOS.FetchResult.NoData);\n        },\n        onAction: (notification: any) =&gt; {\n          logger.debug('PushNotification onAction:', notification);\n        },\n        // (optional) Called when the user fails to register for remote notifications.\n        // Typically occurs when APNS is having issues, or the device is a simulator. (iOS)\n        onRegistrationError: (error: any) =&gt; {\n          logger.debug('PushNotification onRegistrationError:');\n          Sentry.captureException(error, {\n            tags: { section: 'onRegistrationError' }\n          });\n        }\n\n        // requestPermissions: false,\n      });\n    } catch (error) {\n      Sentry.captureException(error, {\n        tags: { section: 'pushNotificationsError' }\n      });\n    }\n  }, []);\n\n  // CREATE CHANNEL, POP INIT NOTIFICATION\n  useEffect(() =&gt; {\n    try {\n      PushNotification.createChannel(\n        {\n          channelId: constants.pushConfig.localNotificationChannelId,\n          channelName: constants.pushConfig.localNotificationChannelName\n        },\n        (created: boolean) =&gt; {\n          logger.debug('PushNotification.createChannel:', created); // false means channel already existed\n        }\n      );\n      // Get the initial notification\n      PushNotification.popInitialNotification(async (notification: any) =&gt; {\n        logger.debug('PushNotification.popInitialNotification notification:', notification);\n        const remoteMessage = await getRemoteMessage();\n\n        if ((notification &amp;&amp; notification?.data) || !isEmpty(remoteMessage)) {\n          UUIDGenerator.getRandomUUID().then(async (uuid: string) =&gt; {\n            const notiData = get(notification, 'data', null);\n            if (notiData) {\n              const message = {\n                command: COMMAND_TYPES.OFFER_PUSH_NOTI_DATA,\n                id: uuid,\n                response: notiData // iOS node-apn 이용하여 테스트 발송시 포맷이다\n              };\n              assignWebRemotePushNotiDelayed(message); // assign 해 놓았다가, 웹페이지의 askPushNotiData 요청 때, 웹페이지에 전달한다.\n            } else if (remoteMessage) {\n              const message = {\n                command: COMMAND_TYPES.OFFER_PUSH_NOTI_DATA,\n                id: uuid,\n                response: remoteMessage\n              };\n              assignWebRemotePushNotiDelayed(message);\n              await deleteRemoteMessage();  \n            } else {\n              const message = {\n                command: COMMAND_TYPES.OFFER_PUSH_NOTI_DATA,\n                id: uuid,\n                response: get(notification, 'data', null)\n              };\n              assignWebRemotePushNotiDelayed(message); // assign 해 놓았다가, 웹페이지의 askPushNotiData 요청 때, 웹페이지에 전달한다.\n            }\n          }); \n        }        \n      });\n    } catch (error) {\n      logger.debug('popInitialNotification ', error);\n      Sentry.captureException(error, {\n        tags: { section: 'popInitialNotification' }\n      });\n    }\n  }, []);\n\n  return null;\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-k\">function</span> <span class=\"pl-smi\">FCMController</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span>\n    assignPushToken<span class=\"pl-kos\">,</span>\n    assignWebRemotePushNoti<span class=\"pl-kos\">,</span>\n    gWebRemotePushNotiDelayed<span class=\"pl-kos\">,</span>\n    assignWebRemotePushNotiDelayed\n  <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">useAppContext</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n\n  <span class=\"pl-c\">// CHECK PERMISSIONS, GENERATE PUSH TOKEN</span>\n  <span class=\"pl-en\">useEffect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n\n      <span class=\"pl-k\">const</span> <span class=\"pl-s1\">authStatus</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">messaging</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">requestPermission</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-k\">const</span> <span class=\"pl-s1\">isEnabled</span> <span class=\"pl-c1\">=</span>\n        <span class=\"pl-s1\">authStatus</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">messaging</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">AuthorizationStatus</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">AUTHORIZED</span> <span class=\"pl-c1\">||</span>\n        <span class=\"pl-s1\">authStatus</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">messaging</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">AuthorizationStatus</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">PROVISIONAL</span><span class=\"pl-kos\">;</span>\n\n      <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">isEnabled</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c\">// FIXME: handle if first request fails</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">pushToken</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">messaging</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getToken</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">pushToken</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-smi\">Sentry</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">captureMessage</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'empty push token'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n        <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'FCM PUSH TOKEN &gt;&gt;&gt; '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">pushToken</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-en\">assignPushToken</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">pushToken</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'push permissions not granted'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">isEnabled</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-smi\">Sentry</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">captureMessage</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'push permissions not granted'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">catch</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">error</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'error getting fcm push token '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">error</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-smi\">Sentry</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">captureException</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">error</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">tags</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">section</span>: <span class=\"pl-s\">'GetFCMToken'</span> <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-c\">// IOS FOREGROUND</span>\n  <span class=\"pl-en\">useEffect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">unsubscribe</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">messaging</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">onMessage</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">remoteMessage</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'@@@@@@ ON_MESSAGE @@@@@@'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">constants</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">isIOS</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'iOS onMessage '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">remoteMessage</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-k\">const</span> <span class=\"pl-s1\">id</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">remoteMessage</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'messageId'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-k\">const</span> <span class=\"pl-s1\">body</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">remoteMessage</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">data</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">message</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s1\">remoteMessage</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">notification</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">body</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s\">''</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-k\">const</span> <span class=\"pl-s1\">title</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">remoteMessage</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">data</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">title</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s1\">remoteMessage</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">notification</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">title</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s\">''</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-k\">const</span> <span class=\"pl-s1\">userInfo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">remoteMessage</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">data</span> <span class=\"pl-c1\">||</span> <span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-k\">const</span> <span class=\"pl-s1\">payload</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n            id<span class=\"pl-kos\">,</span>\n            body<span class=\"pl-kos\">,</span>\n            title<span class=\"pl-kos\">,</span>\n            userInfo\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'iOS onMessage payload '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">payload</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-smi\">PushNotificationIOS</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">addNotificationRequest</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">payload</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">error</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'IOS FOREGROUND error'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">error</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-smi\">Sentry</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">captureException</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">error</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">tags</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">section</span>: <span class=\"pl-s\">'PushNotificationsForeground'</span> <span class=\"pl-kos\">}</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">unsubscribe</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-c\">// CONFIGURE PUSH, HANDLE NOTI PRESSED</span>\n  <span class=\"pl-en\">useEffect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-smi\">PushNotification</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">configure</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n        <span class=\"pl-c\">// onRegister: function (token: any) {</span>\n        <span class=\"pl-c\">//   logger.debug('PushNotification onRegister token:', token);</span>\n        <span class=\"pl-c\">//   assignPushToken(token.token);</span>\n        <span class=\"pl-c\">// },</span>\n        <span class=\"pl-c\">// popInitialNotification: false,</span>\n        <span class=\"pl-c\">//(required) Called when a remote is received or opened, or local notification is opened</span>\n        <span class=\"pl-en\">onNotification</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-k\">const</span> <span class=\"pl-s1\">isBrazeNotification</span>: <span class=\"pl-smi\">boolean</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data._ab'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-k\">const</span> <span class=\"pl-s1\">isAndroidForeground</span>: <span class=\"pl-smi\">boolean</span> <span class=\"pl-c1\">=</span>\n            <span class=\"pl-s1\">constants</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">isAndroid</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-smi\">AppState</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">currentState</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'active'</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-k\">const</span> <span class=\"pl-s1\">isNotiPressed</span>: <span class=\"pl-smi\">boolean</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">notification</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">userInteraction</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'PushNotification onNotification:'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">notification</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'isBrazeNotification &gt;&gt;&gt; '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">isBrazeNotification</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          \n          <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">isAndroidForeground</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">isNotiPressed</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n              <span class=\"pl-k\">let</span> <span class=\"pl-s1\">notiContent</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">PushNotificationObject</span><span class=\"pl-kos\">;</span>\n\n              <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">isBrazeNotification</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-s1\">notiContent</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n                  <span class=\"pl-c1\">title</span>: <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data.t'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n                  <span class=\"pl-c1\">message</span>: <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data.a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n                  <span class=\"pl-c1\">userInfo</span>: <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">any</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n              <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-s1\">notiContent</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n                  <span class=\"pl-c\">// <span class=\"pl-k\">@ts</span>-ignore</span>\n                  <span class=\"pl-c1\">title</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">title</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">string</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s1\">notification</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">data</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">title</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s\">''</span><span class=\"pl-kos\">,</span>\n                  <span class=\"pl-c1\">message</span>: <span class=\"pl-s1\">notification</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">message</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s1\">notification</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">data</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">message</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s\">''</span><span class=\"pl-kos\">,</span>\n                  <span class=\"pl-c1\">userInfo</span>: <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">any</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n              <span class=\"pl-kos\">}</span>\n              <span class=\"pl-en\">createlocalNotification</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notiContent</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// 안드로이드의 경우, 포그라운드 시, 앱상단에 표시한다</span>\n            <span class=\"pl-kos\">}</span>\n          <span class=\"pl-kos\">}</span> \n          <span class=\"pl-c\">// FIXME: passing a payload to webview without request causing a bug. remove logic below </span>\n           <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-smi\">AppState</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">currentState</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s\">'active'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-smi\">UUIDGenerator</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getRandomUUID</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">uuid</span>: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n              <span class=\"pl-k\">const</span> <span class=\"pl-s1\">message</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">command</span>: <span class=\"pl-smi\">COMMAND_TYPES</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">OFFER_PUSH_NOTI_DATA</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">uuid</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">response</span>: <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">)</span>\n              <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n              <span class=\"pl-en\">assignWebRemotePushNoti</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">message</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-kos\">}</span>\n\n          <span class=\"pl-c\">// BRAZE NOTIFICATIONS - BACKGROUND //</span>\n          <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">isNotiPressed</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">isBrazeNotification</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-smi\">AppState</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">currentState</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s\">'active'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-k\">const</span> <span class=\"pl-s1\">notiContent</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n              <span class=\"pl-c1\">title</span>: <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data.t'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">message</span>: <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data.a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n              <span class=\"pl-c1\">userInfo</span>: <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">any</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-en\">createlocalNotification</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notiContent</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-kos\">}</span>\n\n          <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">isNotiPressed</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'userInteraction true notification:'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">notification</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-smi\">UUIDGenerator</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getRandomUUID</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">uuid</span>: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n              <span class=\"pl-k\">const</span> <span class=\"pl-s1\">notiData</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">null</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n              <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'notiData '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">notiData</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n             <span class=\"pl-c\">// FIXME: wrap if else statement with foreground check</span>\n              <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-en\">isEmpty</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notiData</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-k\">const</span> <span class=\"pl-s1\">message</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n                  <span class=\"pl-c1\">command</span>: <span class=\"pl-smi\">COMMAND_TYPES</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">OFFER_PUSH_NOTI_DATA</span><span class=\"pl-kos\">,</span>\n                  <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">uuid</span><span class=\"pl-kos\">,</span>\n                  <span class=\"pl-c1\">response</span>: <span class=\"pl-s1\">notiData</span> <span class=\"pl-c\">// iOS node-apn 이용하여 테스트 발송시 포맷이다</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-en\">assignWebRemotePushNoti</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">message</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n              <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-k\">const</span> <span class=\"pl-s1\">response</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">null</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-k\">const</span> <span class=\"pl-s1\">message</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n                  <span class=\"pl-c1\">command</span>: <span class=\"pl-smi\">COMMAND_TYPES</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">OFFER_PUSH_NOTI_DATA</span><span class=\"pl-kos\">,</span>\n                  <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">uuid</span><span class=\"pl-kos\">,</span>\n                  response\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-c\">// if (!notification.foreground &amp;&amp; constants.isAndroid) {</span>\n                <span class=\"pl-c\">//   const remoteMessage = await getRemoteMessage();</span>\n                <span class=\"pl-c\">//   message.response = get(remoteMessage, 'data', null);</span>\n                <span class=\"pl-c\">// }</span>\n                <span class=\"pl-en\">assignWebRemotePushNoti</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">message</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-c\">// if (constants.isAndroid) await deleteRemoteMessage();</span>\n              <span class=\"pl-kos\">}</span>\n\n               <span class=\"pl-c\">// FIXME: match local noti with remove noti</span>\n               <span class=\"pl-c\">// local noti - source of truth. </span>\n               <span class=\"pl-c\">// case not handled: noti queue, each noti has a payload while code below only gets latest remote message skipping tapped notifications</span>\n              <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">!</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">foreground</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">constants</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">isAndroid</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-k\">const</span> <span class=\"pl-s1\">remoteMessage</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">getRemoteMessage</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'remoteMessage[PushNotiHelper]'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">remoteMessage</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-k\">const</span> <span class=\"pl-s1\">message</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n                  <span class=\"pl-c1\">command</span>: <span class=\"pl-smi\">COMMAND_TYPES</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">OFFER_PUSH_NOTI_DATA</span><span class=\"pl-kos\">,</span>\n                  <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">uuid</span><span class=\"pl-kos\">,</span>\n                  <span class=\"pl-c1\">response</span>: <span class=\"pl-s1\">remoteMessage</span>\n                <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-s1\">message</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">response</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">remoteMessage</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">null</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-en\">assignWebRemotePushNoti</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">message</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n                <span class=\"pl-k\">await</span> <span class=\"pl-en\">deleteRemoteMessage</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n              <span class=\"pl-kos\">}</span>\n            <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-kos\">}</span>\n          <span class=\"pl-c\">// (required) Called when a remote is received or opened, or local notification is opened</span>\n          <span class=\"pl-s1\">notification</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">finish</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">PushNotificationIOS</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">FetchResult</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">NoData</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-en\">onAction</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span>: <span class=\"pl-smi\">any</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'PushNotification onAction:'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">notification</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-c\">// (optional) Called when the user fails to register for remote notifications.</span>\n        <span class=\"pl-c\">// Typically occurs when APNS is having issues, or the device is a simulator. (iOS)</span>\n        <span class=\"pl-en\">onRegistrationError</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">error</span>: <span class=\"pl-smi\">any</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'PushNotification onRegistrationError:'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n          <span class=\"pl-smi\">Sentry</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">captureException</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">error</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-c1\">tags</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">section</span>: <span class=\"pl-s\">'onRegistrationError'</span> <span class=\"pl-kos\">}</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-kos\">}</span>\n\n        <span class=\"pl-c\">// requestPermissions: false,</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">error</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-smi\">Sentry</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">captureException</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">error</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">tags</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">section</span>: <span class=\"pl-s\">'pushNotificationsError'</span> <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-c\">// CREATE CHANNEL, POP INIT NOTIFICATION</span>\n  <span class=\"pl-en\">useEffect</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-smi\">PushNotification</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">createChannel</span><span class=\"pl-kos\">(</span>\n        <span class=\"pl-kos\">{</span>\n          <span class=\"pl-c1\">channelId</span>: <span class=\"pl-s1\">constants</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">pushConfig</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">localNotificationChannelId</span><span class=\"pl-kos\">,</span>\n          <span class=\"pl-c1\">channelName</span>: <span class=\"pl-s1\">constants</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">pushConfig</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">localNotificationChannelName</span>\n        <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n        <span class=\"pl-kos\">(</span><span class=\"pl-s1\">created</span>: <span class=\"pl-smi\">boolean</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'PushNotification.createChannel:'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">created</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// false means channel already existed</span>\n        <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-c\">// Get the initial notification</span>\n      <span class=\"pl-smi\">PushNotification</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">popInitialNotification</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span>: <span class=\"pl-smi\">any</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'PushNotification.popInitialNotification notification:'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">notification</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-s1\">remoteMessage</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">getRemoteMessage</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n        <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">notification</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">data</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">||</span> <span class=\"pl-c1\">!</span><span class=\"pl-en\">isEmpty</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">remoteMessage</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n          <span class=\"pl-smi\">UUIDGenerator</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getRandomUUID</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">uuid</span>: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n            <span class=\"pl-k\">const</span> <span class=\"pl-s1\">notiData</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">null</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n            <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">notiData</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n              <span class=\"pl-k\">const</span> <span class=\"pl-s1\">message</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">command</span>: <span class=\"pl-smi\">COMMAND_TYPES</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">OFFER_PUSH_NOTI_DATA</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">uuid</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">response</span>: <span class=\"pl-s1\">notiData</span> <span class=\"pl-c\">// iOS node-apn 이용하여 테스트 발송시 포맷이다</span>\n              <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n              <span class=\"pl-en\">assignWebRemotePushNotiDelayed</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">message</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// assign 해 놓았다가, 웹페이지의 askPushNotiData 요청 때, 웹페이지에 전달한다.</span>\n            <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">remoteMessage</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n              <span class=\"pl-k\">const</span> <span class=\"pl-s1\">message</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">command</span>: <span class=\"pl-smi\">COMMAND_TYPES</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">OFFER_PUSH_NOTI_DATA</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">uuid</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">response</span>: <span class=\"pl-s1\">remoteMessage</span>\n              <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n              <span class=\"pl-en\">assignWebRemotePushNotiDelayed</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">message</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n              <span class=\"pl-k\">await</span> <span class=\"pl-en\">deleteRemoteMessage</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  \n            <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-kos\">{</span>\n              <span class=\"pl-k\">const</span> <span class=\"pl-s1\">message</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n                <span class=\"pl-c1\">command</span>: <span class=\"pl-smi\">COMMAND_TYPES</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">OFFER_PUSH_NOTI_DATA</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">id</span>: <span class=\"pl-s1\">uuid</span><span class=\"pl-kos\">,</span>\n                <span class=\"pl-c1\">response</span>: <span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">notification</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'data'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">null</span><span class=\"pl-kos\">)</span>\n              <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n              <span class=\"pl-en\">assignWebRemotePushNotiDelayed</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">message</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// assign 해 놓았다가, 웹페이지의 askPushNotiData 요청 때, 웹페이지에 전달한다.</span>\n            <span class=\"pl-kos\">}</span>\n          <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> \n        <span class=\"pl-kos\">}</span>        \n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">error</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s1\">logger</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">debug</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'popInitialNotification '</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">error</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-smi\">Sentry</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">captureException</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">error</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-c1\">tags</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">section</span>: <span class=\"pl-s\">'popInitialNotification'</span> <span class=\"pl-kos\">}</span>\n      <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span></pre></div>",
    "labels": [
      { "name": "bug", "color": "d73a4a" },
      { "name": "P1", "color": "006b75" },
      { "name": "RN", "color": "EBEA93" },
      { "name": "push", "color": "962FF6" },
      { "name": "2d", "color": "2A168E" }
    ],
    "url": "https://github.com/finset-io/betterday-app/issues/60",
    "repoNameWithOwner": "finset-io/betterday-app",
    "repoName": "betterday-app",
    "repoOwner": "finset-io",
    "author": "alexfinset",
    "createdAt": "2023-03-13T14:57:38.000Z"
  },
  {
    "status": "In progress",
    "est": [{ "name": "FE est", "value": 4 }],
    "num": 2244,
    "title": "FE : alliance 프론트엔드 통합지원을 위한 Config &amp; Merge 작업",
    "body": "<p dir=\"auto\"><strong>원 소스로 서비스 관리를 위한 작업</strong></p>\n<p dir=\"auto\">check point :</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> V3에서 finset 신용점수가져올 수 있는지 확인</li>\n</ul>",
    "labels": [
      { "name": "FE", "color": "3CCD91" },
      { "name": "7d", "color": "3941AC" }
    ],
    "url": "https://github.com/finset-io/betterday/issues/2244",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "LABGUNWOO",
    "createdAt": "2023-03-10T02:12:18.000Z"
  },
  {
    "status": "In progress",
    "est": [
      { "name": "BE est", "value": 0.5 },
      { "name": "FE est", "value": 1.5 }
    ],
    "num": 2118,
    "title": "제휴사 약관동의 현황 안내",
    "body": "<h1 dir=\"auto\">TODO</h1>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> FE 개발</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Markdown 2 HTML gen.( BO에 요청)</li>\n</ul>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1628792259\" data-permission-text=\"Title is private\" data-url=\"https://github.com/finset-io/betterday-frontend/issues/390\" data-hovercard-type=\"issue\" data-hovercard-url=\"/finset-io/betterday-frontend/issues/390/hovercard\" href=\"https://github.com/finset-io/betterday-frontend/issues/390\">finset-io/betterday-frontend#390</a></p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/kimpilwon/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/kimpilwon\">@kimpilwon</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/donggi12/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/donggi12\">@donggi12</a> : 약관 카데고리 확인 및 작업<br>\n<a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/parkkt-finset/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/parkkt-finset\">@parkkt-finset</a> : is_V3 유효한지 확인</p>\n<hr>\n<p dir=\"auto\">문제점 : 현재는 fe에 하드 코드 되어있음. 앞으로 업데이트가 되어야함</p>\n<p dir=\"auto\">베러를 타 제휴사 채널에서 웹뷰를 이용하여 가입한 경우 해당 내용을 베러 앱에서 \"제휴사를 통한 이용현황\"으로 안내하고자 함</p>\n<p dir=\"auto\">베러 앱&gt;설정 페이지에서 타 채널을 통한 베러 이용 현황 노출 및 동의한 약관항목 게시</p>\n<ul dir=\"auto\">\n<li>서금원</li>\n<li>V3</li>\n</ul>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/97018781/213602195-a6c962e0-e24e-4a5e-a7cf-6a864069285e.png\"><img src=\"https://user-images.githubusercontent.com/97018781/213602195-a6c962e0-e24e-4a5e-a7cf-6a864069285e.png\" alt=\"Image\" style=\"max-width: 100%;\"></a></p>",
    "labels": [
      { "name": "BE", "color": "1F78C4" },
      { "name": "FE", "color": "3CCD91" },
      { "name": "0.5d", "color": "3941AC" },
      { "name": "1.5d", "color": "3941AC" }
    ],
    "url": "https://github.com/finset-io/betterday/issues/2118",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "hanakim00",
    "createdAt": "2023-01-20T02:12:34.000Z"
  },
  {
    "status": "In progress",
    "est": [{ "name": "BE est", "value": 2 }],
    "num": 2165,
    "title": "BE: Technical Debt 처리 ",
    "body": "<ul class=\"contains-task-list\">\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Prisma Upgrade (2D)</p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/orgs/finset-io/projects/27/views/1?filterQuery=prisma&amp;pane=issue&amp;itemId=9679842\">https://github.com/orgs/finset-io/projects/27/views/1?filterQuery=prisma&amp;pane=issue&amp;itemId=9679842</a></li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Squash migrations</p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/orgs/finset-io/projects/27/views/1?filterQuery=prisma&amp;pane=issue&amp;itemId=16680884\">https://github.com/orgs/finset-io/projects/27/views/1?filterQuery=prisma&amp;pane=issue&amp;itemId=16680884</a></li>\n</ul>\n</li>\n</ul>",
    "labels": [
      { "name": "BE", "color": "1F78C4" },
      { "name": "2d", "color": "3941AC" }
    ],
    "url": "https://github.com/finset-io/betterday/issues/2165",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "bobur-finset",
    "createdAt": "2023-02-03T06:14:29.000Z"
  },
  {
    "status": "In progress",
    "est": [{ "name": "BE est", "value": 3 }],
    "num": 2091,
    "title": "보험업권 API V2 개발",
    "body": "<h3 dir=\"auto\">Progress Status:</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> 기존 DB 수정 완료</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\">  신규 DB schema 작업 완료</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\">  실데이터 테스트\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> 피보험</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> dc/db : delay by lack of test cases</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> general : delay by lack of test cases</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\">  API interface 작업(Opt. BE E2E test) : supposed to be done this sprint (2023-03-17~2023-03-30)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> 통합 테스트</li>\n</ul>\n<hr>\n<p dir=\"auto\">상황 : 파인랩사(보험전문GA사)에서 마이데이터 API V2를 기반으로  베러 웹뷰 호출을 통한 마이데이터 인증 모듈 서비스 제공 (v1/v2 둘다 지원해야함)<br>\n일정 : 3월 말 구축 완료 타겟<br>\n따라서 보험업권에 관한 API 업데이트 BE 얼마나 걸리는지 소요 확인<br>\n기획/ 디자인에 따른 FE 소요일정은 추후에 FUP</p>\n<p dir=\"auto\">표준 API 업데이트<br>\n\\PAGE20, PAGE 46 보험 목록정보</p>\n<p dir=\"auto\">PAGE 55: 보험 거래내역조회 UPDATE<br>\nPAGE 203 보험업권 내용</p>\n<p dir=\"auto\">스펙보는데 1d<br>\n공유할 자료 만들기<br>\n개발 리뷰 및 개발방향 정하기</p>\n<p dir=\"auto\">다음스프린트 목표<br>\n논의한 설계방향으로 프로토타이핑 만들기<br>\n기획 설계하기</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\">  스펙 분석</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> 스펙 리뷰</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\">  개발분석리뷰</li>\n</ul>\n<p dir=\"auto\">Estimation (14D)<br>\n기존 DB 수정 (1D)<br>\nAPI 추가 작업 (4D)<br>\nDB schema 추가 작업 (3D)<br>\nTestbed 기준으로 테스트 (1D)<br>\nV2 check logic (1D)<br>\nFE interface 작업 (asset/all v2) (2D)<br>\n통합 + 실데이터 테스트 (4D)</p>",
    "labels": [
      { "name": "BE", "color": "1F78C4" },
      { "name": "3d", "color": "3941AC" }
    ],
    "url": "https://github.com/finset-io/betterday/issues/2091",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "kimpilwon",
    "createdAt": "2023-01-12T07:56:47.000Z"
  },
  {
    "status": "In progress",
    "est": [{ "name": "BE est", "value": 2 }],
    "num": 1795,
    "title": "BE:베러 QA,hotfix,운영",
    "body": "<p dir=\"auto\">운영 이슈중<br>\n정기전송 관련 이슈. <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1432982805\" data-permission-text=\"Title is private\" data-url=\"https://github.com/finset-io/betterday/issues/1737\" data-hovercard-type=\"issue\" data-hovercard-url=\"/finset-io/betterday/issues/1737/hovercard\" href=\"https://github.com/finset-io/betterday/issues/1737\">#1737</a></p>",
    "labels": [
      { "name": "BE", "color": "1F78C4" },
      { "name": "2d", "color": "3941AC" }
    ],
    "url": "https://github.com/finset-io/betterday/issues/1795",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "kimpilwon",
    "createdAt": "2022-11-11T02:07:23.000Z"
  },
  {
    "status": "In progress",
    "est": [{ "name": "FE est", "value": 1 }],
    "num": 1794,
    "title": "FE:베러 QA P1,hotfix,운영",
    "body": "<ul dir=\"auto\">\n<li>next sprint 상위 p1 qa 이슈들</li>\n</ul>",
    "labels": [
      { "name": "FE", "color": "3CCD91" },
      { "name": "1d", "color": "3941AC" }
    ],
    "url": "https://github.com/finset-io/betterday/issues/1794",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "kimpilwon",
    "createdAt": "2022-11-11T02:07:15.000Z"
  },
  {
    "status": "In progress",
    "est": [{ "name": "FE est", "value": 2 }],
    "num": 1355,
    "title": "FE Release(tuesday)",
    "body": "",
    "labels": [
      { "name": "FE", "color": "3CCD91" },
      { "name": "2d", "color": "3941AC" }
    ],
    "url": "https://github.com/finset-io/betterday/issues/1355",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "alexfinset",
    "createdAt": "2022-08-19T06:03:08.000Z"
  },
  {
    "status": "In progress",
    "est": [{ "name": "BE est", "value": 2 }],
    "num": 1356,
    "title": "BE: Release",
    "body": "",
    "labels": [
      { "name": "BE", "color": "1F78C4" },
      { "name": "2d", "color": "3941AC" }
    ],
    "url": "https://github.com/finset-io/betterday/issues/1356",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "alexfinset",
    "createdAt": "2022-08-19T06:04:06.000Z"
  },
  {
    "status": "In progress",
    "est": [{ "name": "BE est", "value": 0.5 }],
    "num": 753,
    "title": "BE: 전송요구 만료 예정 사용자 push 전송",
    "body": "<h2 dir=\"auto\">TODO</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> 1. 배치 작업 (전송 만료 사용자 redis에 저장): 1d</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> 2. 만료된 사용자 전송 중지 (필터링 필요, refreshAuthToken?): 0.5d<br>\n<del>확인 필요</del></p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> 3. push 보내기 1d<br>\nweekly</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> 4. 테스트: 0.5d</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> code review</p>\n</li>\n</ul>\n<p dir=\"auto\">관련: <a href=\"https://github.com/finset-io/betterday/issues/1731\" data-hovercard-type=\"issue\" data-hovercard-url=\"/finset-io/betterday/issues/1731/hovercard\">#1731</a></p>",
    "labels": [
      { "name": "BE", "color": "1D76DB" },
      { "name": "0.5d", "color": "3941AC" }
    ],
    "url": "https://github.com/finset-io/better-backend/issues/753",
    "repoNameWithOwner": "finset-io/better-backend",
    "repoName": "better-backend",
    "repoOwner": "finset-io",
    "author": "yun-gitple",
    "createdAt": "2023-01-13T05:09:59.000Z"
  },
  {
    "status": "In progress",
    "est": [{ "name": "BE est", "value": 2 }],
    "num": 2227,
    "title": "IRP 계좌 펀드명 Matching",
    "body": "<h1 dir=\"auto\">TODO</h1>\n<ul dir=\"auto\">\n<li>Make IRP_SEARCH_NAME field (removing whitespaces)</li>\n<li>Make regex logic to reduce data set</li>\n<li>Make IRP_FUND_INFO table</li>\n<li>Make matching IRP_FUND_CODE logic with difflib library (daily or weekly batch)</li>\n<li>Make sampling data to test and see batch overload</li>\n</ul>\n<hr>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> 분석 1d</li>\n</ul>\n<p dir=\"auto\"><strong>요구사항</strong><br>\nIRP 상품명(IRP_NAME from MD_INVEST_IRPS_DETAIL)을 펀드기본 정보(BD_KFR_BASELINE_INFO_LATEST)와 연결하고 싶다.</p>\n<p dir=\"auto\"><strong>현재상태</strong><br>\n상품명을 like %상품명% 형태로 매칭시도하면 전체의 20% 정도만 매칭이 된다.</p>\n<p dir=\"auto\"><strong>제안</strong><br>\n문자열 유사성 측정을 활용해볼 수 있음<br>\ndifflib.Sequencematcher  (<a href=\"https://zephyrus1111.tistory.com/191\" rel=\"nofollow\">https://zephyrus1111.tistory.com/191</a>)<br>\n배치방식이 필요할 것으로 추정됨</p>",
    "labels": [
      { "name": "BE", "color": "1F78C4" },
      { "name": "2d", "color": "3941AC" }
    ],
    "url": "https://github.com/finset-io/betterday/issues/2227",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "LABGUNWOO",
    "createdAt": "2023-03-03T01:43:59.000Z"
  },
  {
    "status": "In progress",
    "est": [{ "name": "FE est", "value": 0 }],
    "num": 2237,
    "title": "펀도라 F/U - 휴면계좌 선택 불가하도록 수정",
    "body": "<h1 dir=\"auto\">Why :</h1>\n<ul dir=\"auto\">\n<li>펀도라 F/U 이슈로 수수료계좌 선택시 휴면계좌를 선택하지 못하게 하고자 함. (펀도라팀은 개발 적용 완료)</li>\n<li><a href=\"https://www.figma.com/file/l2QApIVggsmWCKmcd0PFIZ/%ED%99%94%EB%A9%B4%EC%84%A4%EA%B3%84%EC%84%9C?node-id=2986%3A115227&amp;t=aW9MQyvm49fhT9Yi-4\" rel=\"nofollow\">펀도라 이슈</a></li>\n</ul>\n<h1 dir=\"auto\">How :</h1>\n<ul dir=\"auto\">\n<li>연금 MP 가입시 수수료 계좌 선택단계에서 휴면계좌를 터치한 경우 (1) 선택안됨, 하단 플로팅 버튼 disabled 유지 (2) 토스트팝업 노출</li>\n<li>기획 <a href=\"https://www.figma.com/file/l2QApIVggsmWCKmcd0PFIZ/%ED%99%94%EB%A9%B4%EC%84%A4%EA%B3%84%EC%84%9C?node-id=2986%3A115227&amp;t=aW9MQyvm49fhT9Yi-4\" rel=\"nofollow\">Figma</a></li>\n</ul>",
    "labels": [
      { "name": "FE", "color": "3CCD91" },
      { "name": "0d", "color": "3941AC" }
    ],
    "url": "https://github.com/finset-io/betterday/issues/2237",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "donggi12",
    "createdAt": "2023-03-07T06:06:30.000Z"
  },
  {
    "status": "In progress",
    "est": [{ "name": "FE est", "value": 0 }],
    "num": 2247,
    "title": "[연금 UT 개선] 알림권한 접근안내 팝업 노출",
    "body": "<h1 dir=\"auto\">Why :</h1>\n<p dir=\"auto\">앱 자체에 대한 알림권한을 허용하지 않은 경우 펀도라에서 보내는 자문계약 관련 PUSH를 수신할 수 없음.<br>\n이 경우 자문계약 이후 투자제안, 매매체결, 리밸런싱등 주요 정보에 대한 전달이 어려워 사용자가 불편함을 느낄 수 있음.<br>\nCT_CONTRACT07-입금대기 화면 이후 알림 접근 권한을 꺼놓은 사용자에게 알림 권한을 다시 ON 할 수 있게 하고자 함.</p>\n<h1 dir=\"auto\">How :</h1>\n<ul dir=\"auto\">\n<li>알림권한 접근 안내 팝업 노출하여 해결</li>\n<li>가입에 대한 의사가 명확히 판단되는 시점에 노출. 단, 가입 과정을 방해하지 않아야함.</li>\n<li>알림권한 미허용자에게만 노출.</li>\n<li>기획 <a href=\"https://www.figma.com/file/l2QApIVggsmWCKmcd0PFIZ/%ED%99%94%EB%A9%B4%EC%84%A4%EA%B3%84%EC%84%9C?node-id=3051%3A117018\" rel=\"nofollow\">figma</a></li>\n</ul>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/104746013/224657426-089274bc-54bd-4b1c-8246-3311265d621b.png\"><img src=\"https://user-images.githubusercontent.com/104746013/224657426-089274bc-54bd-4b1c-8246-3311265d621b.png\" alt=\"Image\" style=\"max-width: 100%;\"></a></p>",
    "labels": [
      { "name": "RN", "color": "EBEA93" },
      { "name": "0d", "color": "3941AC" }
    ],
    "url": "https://github.com/finset-io/betterday/issues/2247",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "donggi12",
    "createdAt": "2023-03-13T09:14:56.000Z"
  },
  {
    "status": "In progress",
    "est": [],
    "num": 2267,
    "title": "Be: 현대캐피탈 요청 문의 대응",
    "body": "<h3 dir=\"auto\">Issue</h3>\n<ul dir=\"auto\">\n<li>Hyundai Capital Inc has 1AM ~ 7AM 정기 전송 time slot. But our backend is sending around 7:10AM because of workload(seemingly)</li>\n<li>Duplicate transaction error was reported from HC but in MongDB there is no duplicate tx record</li>\n</ul>\n<h3 dir=\"auto\">Solution:</h3>\n<ul dir=\"auto\">\n<li>전기전송\n<ul dir=\"auto\">\n<li>First, grace period of 20 minutes will be given in order to avoid sending API requests out of time slot</li>\n<li>Logging will be added to see whether this issue keeps happening or not.</li>\n<li>Daily monitoring will be necessary to make sure that this issue does not happen again</li>\n</ul>\n</li>\n<li>Duplicate transaction error\n<ul dir=\"auto\">\n<li>API rety package should be removed and there is already issue regarding (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1575329912\" data-permission-text=\"Title is private\" data-url=\"https://github.com/finset-io/betterday/issues/2170\" data-hovercard-type=\"issue\" data-hovercard-url=\"/finset-io/betterday/issues/2170/hovercard\" href=\"https://github.com/finset-io/betterday/issues/2170\">#2170</a>)</li>\n</ul>\n</li>\n</ul>",
    "labels": [{ "name": "BE", "color": "1F78C4" }],
    "url": "https://github.com/finset-io/betterday/issues/2267",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "bobur-finset",
    "createdAt": "2023-03-21T04:44:20.000Z"
  },
  {
    "status": "In progress",
    "est": [],
    "num": 2268,
    "title": "베러 앱에 이미 자산 연결한 유저인 경우에 서금원 앱에 들어갔을 경우 기존 자산 연결이 전부 사라지는 버그",
    "body": "<p dir=\"auto\">베러 앱에 이미 가입된 사람이면서 자산 연결하여 사용중인데 서금원 앱을 통해서 재무진단 항목으로 들어가 약관 동의하고 베러 프론트에 진입하면<br>\nMD_USER_TOKEN의 연결된 컬럼 데이터 항목(IS_ACTIVE, IS_MYDATA_CONNECTED)이 전부 false가 되는 현상</p>\n<ol dir=\"auto\">\n<li>베러 앱 가입</li>\n<li>베러 앱에서 자산 연결</li>\n<li>서금원 앱 설치</li>\n<li>서금원 통해서 재무진단 서비스 진입</li>\n<li>서금원 통해서 재무진단 앱 탈퇴</li>\n<li>베러 앱에서 진입하여 자산상태 확인</li>\n</ol>\n<p dir=\"auto\">cc)<a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/bobur-finset/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bobur-finset\">@bobur-finset</a></p>",
    "labels": [{ "name": "BE", "color": "1F78C4" }],
    "url": "https://github.com/finset-io/betterday/issues/2268",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "parkkt-finset",
    "createdAt": "2023-03-22T00:29:26.000Z"
  },
  {
    "status": "In progress",
    "est": [
      { "name": "FE est", "value": 1 },
      { "name": "BE est", "value": 2 }
    ],
    "num": 2251,
    "title": "push 동의 세분화 기획",
    "body": "<h1 dir=\"auto\">TODO</h1>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> BE 분석설계</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> FE UI/API</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> 금융자산 변동 알림 만 만든다.</li>\n</ul>\n<h2 dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/hanakim00/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hanakim00\">@hanakim00</a> : 디자인상세가이드 필요</h2>\n<p dir=\"auto\">베러(v3 for near future) 앱에서 push 발송 시 (광고) 달지 않은 컨텐츠 성 알림 푸시를 보낼 수 있다.</p>\n<ul class=\"contains-task-list\">\n<li>\n<p dir=\"auto\">수신 조건 : 베러 앱 설치 및 push 알림 수신 동의 한 경우</p>\n</li>\n<li>\n<p dir=\"auto\">on / off 조건 : 처음 사용자는 on 상태로 default</p>\n</li>\n<li>\n<p dir=\"auto\">우선 적용 컨텐츠 알림 : 마이데이터 자산 알림 설정 &gt; 금융자산현황 변동 알림</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> 금융자산 변동 알림</p>\n</li>\n</ul>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/97018781/225561065-e5373a37-a3bf-4189-b498-904389bac1a3.png\"><img src=\"https://user-images.githubusercontent.com/97018781/225561065-e5373a37-a3bf-4189-b498-904389bac1a3.png\" alt=\"Image\" style=\"max-width: 100%;\"></a></p>",
    "labels": [
      { "name": "1d", "color": "3941AC" },
      { "name": "2d", "color": "3941AC" },
      { "name": "BE-FE", "color": "A45072" }
    ],
    "url": "https://github.com/finset-io/betterday/issues/2251",
    "repoNameWithOwner": "finset-io/betterday",
    "repoName": "betterday",
    "repoOwner": "finset-io",
    "author": "hanakim00",
    "createdAt": "2023-03-16T08:41:20.000Z"
  }
]
